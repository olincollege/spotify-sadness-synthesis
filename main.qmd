---
jupyter: python3
---

```{python}
%load_ext autoreload
%autoreload 2
```

```{python}
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
```

```{python}
import data_collector
data_collector.login()
```

```{python}
mitski_all = data_collector.get_all_playlists("mitski.txt")
phoebe_all = data_collector.get_all_playlists("phoebe.txt")
```

```{python}
mitski_temp = mitski_all
phoebe_temp = phoebe_all
```

```{python}
import data_helpers
ambiguous_indexes, reversed_indexes = data_helpers.find_anomalies(mitski_all, 0, 2)
```

```{python}
import pandas as pd
mitski_df = pd.DataFrame(mitski_all)

for i in reversed_indexes:
    mitski_all[i] = list(reversed(mitski_df.loc[i].dropna()))

for idx, element in enumerate(ambiguous_indexes):
    mitski_all.pop(element- idx) # bcs indexes get moved when something is popped

mitski_df = pd.DataFrame(mitski_all)
mitski_df
```

```{python}
ambiguous_indexes, reversed_indexes = data_helpers.find_anomalies(phoebe_all, 6, 2)
print(ambiguous_indexes)
print(reversed_indexes)
```

```{python}
import pandas as pd
phoebe_df = pd.DataFrame(mitski_all)

for i in reversed_indexes:
    phoebe_all[i] = list(reversed(phoebe_df.loc[i].dropna()))

for idx, element in enumerate(ambiguous_indexes):
    phoebe_all.pop(element- idx) # bcs indexes get moved when something is popped

phoebe_df = pd.DataFrame(phoebe_all)
phoebe_df
```

```{python}
mitski_df.to_csv("mitski_data.csv")
phoebe_df.to_csv("phoebe_data.csv")
```

```{python}
from data_helpers import *
from annotations import *
from data_collector import *

# mitski_rank = get_avg_ranking(mitski_df)
# graph_songs_percentile(mitski_rank, "Mitski Percentiles", 30)

# phoebe_rank = get_avg_ranking(phoebe_df)
# graph_songs_percentile(phoebe_rank, "Phoebe Percentiles", 30)

# print(len(mitski_rank))
mitski_all = get_all_ranking(mitski_df)
print(find_least_controversial(mitski_all, 10))
lh, btc, p2, bmamc, rfsncib, lush, sita, punisher = get_all_albums()

mitski_rank = get_avg_ranking(mitski_df)
```

```{python}
from annotations import *
from itertools import islice


phoebe_rank_boxplot = get_all_ranking(phoebe_df, 5)
 


keys, values = zip(*phoebe_rank_boxplot.items())
half = len(phoebe_rank_boxplot)//2
res1 = dict(zip(keys[:half], values[:half]))
res2 = dict(zip(keys[half:], values[half:]))

make_boxplot_songs(phoebe_rank_boxplot, "All Phoebe Songs", )

puberty2 = make_dict_one_album(p2, mitski_all)

make_boxplot_songs(puberty2, "Puberty 2")
```

